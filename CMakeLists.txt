cmake_minimum_required(VERSION 2.8.3)
project(mandelbrot_kokkos_cmake CXX)

#
# Prevent from build in source tree
#
if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})
  message(FATAL_ERROR "In-source builds not allowed. Please make a new directory (called a build directory) and run CMake from there. You may need to remove CMakeCache.txt. ")
endif()

#
# Create project version (using git info ?)
# TODO
#

#
# Init build type: Release, Debug, ...
#
if (NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
  #set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Choose the type of build." FORCE)
  set(CMAKE_BUILD_TYPE "Release")
endif()

# #######################################################
# Initialize CMAKE module path (for Kokkos and others)
#########################################################
# Make sure KOKKOS_PATH has been set in environment (e.g. using a modulefile)
if(NOT DEFINED ENV{KOKKOS_PATH})
  message(FATAL_ERROR "KOKKOS_PATH env variable must be set and pointing to Kokkos installation directory, i.e. where cmake can find file kokkos.cmake.")
else()
  # just make sure kokkos install path contains a file named kokkos.cmake
  if (NOT EXISTS $ENV{KOKKOS_PATH}/kokkos.cmake)
    message(FATAL_ERROR "file kokkos.cmake does not exists in \"$ENV{KOKKOS_PATH}\" ! Check your kokkos installation")
  endif()
  set(CMAKE_MODULE_PATH "$ENV{KOKKOS_PATH}" ${CMAKE_MODULE_PATH})
endif()

#
# set auxiliary cmake subdirectory
#
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})

#
# include Kokkos configuration : kokkos.cmake (
# assumed to be generated by kokkos itself
#
include(kokkos)


#
# common flags
#
if (KOKKOS_INTERNAL_USE_CUDA MATCHES "1")
  set(CMAKE_CXX_FLAGS  "${KOKKOS_CPPFLAGS} ${KOKKOS_CXXFLAGS} ${CMAKE_CXX_FLAGS} -DUSE_DOUBLE -DCUDA")
else()
  set(CMAKE_CXX_FLAGS  "${KOKKOS_CPPFLAGS} ${KOKKOS_CXXFLAGS} ${CMAKE_CXX_FLAGS} -DUSE_DOUBLE")
endif()
  
set(CMAKE_EXE_LINKER_FLAGS  "${KOKKOS_LDFLAGS} ${CMAKE_EXE_LINKER_FLAGS}")

#
# sources
#
add_subdirectory(src)
